针对a的b次方取模m的数值计算

快速幂两钟方法
1.当b为奇数时，a的b次=a*a的b*-1次
  当b为偶数时，a的b次=a的b/2次*a的b/2次
  
  所以快速幂的递归写法
   typedef long long LL;
 LL binaryPow(LL a,LL b,LL m)
 {
 	LL mul;
 	if(b==0)
 	return 1;
 	else if(b&1)
 	{
 		return a*binaryPow(a,b-1,m)%m;
 	}
 	else
 	{
 		mul=binaryPow(a,b/2,m);
 		return mul*mul%m;
 	}
 }
 int main()
 {
 	cout<<binaryPow(2122,18453456,14545);
 }
 当a>=m的时候，要提前对a取模在进入函数
 当m=1的时候，可以直接特判为0
 
 
 迭代法
 二进制位数变化
   typedef long long LL;
 LL binaryPow(LL a,LL b,LL m)
 {
 	LL ans=1;
 	while(b>0)
 	{
 		if(b&1)
 		{
 			ans=ans*a%m;
 		}
 		a=a*a%m;
 		b>>=1;
 	}
	return ans; 
 }
 int main()
 {
 	cout<<binaryPow(2122,18453456,14545);
 }
