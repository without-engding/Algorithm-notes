说什么是two point 我觉得就是正向和逆向推倒的一个运用
问题是有一个正向递增序列，求两数相加等于m，{1,2,3,4,5,6}，M=8,2+6=3+5=8
直接上代码
 int main()
 {
 	int i,j;
 	int a[100];
 	i=0;
 	j=strlen(a)-1;
 	while(i<j)
 {
 	if(a[i]+a[j]==m)
 	{
 		cout<<a[i]<<a[j];
 		i++;
 		j--;
 	}
 
 	else if(a[i]+a[j]<m)
 	i++;
 	else
 	j--;
 } 
 }
 
可以自行理解此段代码，在分析的时候不要忘记这是正向递增序列
一共三种情况，1.两数相加等于m，这时候a[i]在增大，而a[j]在减小，所以在i++和j--的范围内可能会有下一个
              2.两数相加大于m，这时候i++的话，数会越来越大，所以i不动，j--
              3.不做分析

第二个问题，序列合并，把两个递增序列合并到一起
 int merge(int A[],int B[],int C[],int n,int m)
 {
 	int i=0,j=0,k=0;
 	while(i<n&&j<m)
 	{
 		if(A[i]<=B[j])
 		C[k++]=A[i++];
 		else 
 		C[k++]=B[j++];
 	}
 	while(i<n) C[k++]=A[i++];
 	while(j<m) C[k++]=B[k++];
 	return k;
 }
 不认为有什么难度，但是这个思想要保留
